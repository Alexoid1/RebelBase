{"version":3,"sources":["contexts/FilterContext.js","components/NavigationBar.js","components/DateContainer.js","components/ItemList.js","App.js","index.js"],"names":["FilterContext","createContext","NavigationBar","useContext","alls","setAlls","setSelected","className","onClick","setTimeout","type","e","name","id","value","DateContainer","date","time","checked","items","index","useState","currentDate","setCurrentDate","currentTime","setCurrentTime","setItes","placeholder","onChange","console","log","target","currentItems","handleDateChange","handleTimeChange","category","reorder","list","startIndex","endIndex","result","splice","removed","ItemList","filterElement","selected","itemss","setItems","activeb","setActive","arrayK","handleSelectAll","map","item","includes","push","handleChangeCheckState","onDragEnd","source","destination","droppableId","prevItems","droppableProvided","droppableProps","ref","innerRef","draggableId","draggableProvided","draggableProps","dragHandleProps","count","lists","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c22a49e.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const FilterContext = createContext({});","import React,{useState,useContext} from 'react';\r\nimport {FilterContext} from '../contexts/FilterContext'\r\nimport './NavigationBar.css'\r\n\r\nfunction NavigationBar() {\r\n    const {alls, setAlls, setSelected} = useContext(FilterContext)\r\n    const handleSelectAll=()=>{\r\n     \r\n      if(alls) {\r\n        setAlls(false)\r\n      }else {\r\n        setAlls(true)\r\n        setSelected('itemSelected')\r\n        setTimeout(()=>{\r\n          setSelected('')\r\n        },1000)\r\n        \r\n      } \r\n      \r\n    }\r\n    return (\r\n      <>\r\n          \r\n\r\n        <div className=\"navigationBar\">\r\n          <h1 className=\"title3\">Select Builder Schedule - 2019 Fall Cohort</h1>\r\n            <nav>\r\n              <ul className=\"navul\">\r\n                <li>\r\n                  <button className={ alls ? 'all  but' : 'all'} \r\n                  onClick={handleSelectAll} \r\n                  type=\"button\">\r\n                    All\r\n                  </button>\r\n                  <p className=\"temple\">Templates</p>\r\n                </li>\r\n                <li className='hide'>\r\n                  <button className={ alls ? 'social': 'social but'} \r\n                  onClick={(e)=>{!alls ? setAlls(true) : setAlls(false)}} \r\n                  type=\"button\">\r\n                    Social Innovation\r\n                  </button>\r\n                </li>\r\n                <li className='dropSelect'>\r\n                    <select name=\"cars\" id=\"cars\">\r\n                      <option value=\"volvo\">Social Innovation</option>\r\n                      <option value=\"saab\">Template 1</option>\r\n                      <option value=\"mercedes\">Template 2</option>\r\n                      <option value=\"audi\">Template 3</option>\r\n                    </select>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <div className='buttonHide'>\r\n              <button className='use' type='button'>\r\n                  use this builder scheduler\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default NavigationBar;\r\n  ","import {useState,React} from 'react';\r\nimport './DateContainer.css'\r\n\r\nfunction DateContainer({date,time,checked,items,index}) {\r\n    const[currentDate,setCurrentDate]=useState(date);\r\n    const[currentTime,setCurrentTime]=useState(time);\r\n    const [ites,setItes]=useState(items)\r\n    const handleDateChange=(e)=>{\r\n        console.log(typeof(e.target.value))\r\n        let currentItems=items\r\n        \r\n        currentItems[index].date=e.target.value\r\n        setCurrentDate(e.target.value)\r\n        setItes([...currentItems])\r\n        \r\n\r\n    }\r\n\r\n    const handleTimeChange=(e)=>{\r\n        console.log(typeof(e.target.value))\r\n        let currentItems=items\r\n        \r\n        currentItems[index].time=e.target.value\r\n        setCurrentTime(e.target.value)\r\n        setItes([...currentItems])\r\n        \r\n\r\n    }\r\n        let dateC\r\n            if(checked){\r\n               dateC=(\r\n                    <div className='dateContainer hideElement'>\r\n                        <div>\r\n                            <input className='date '  value={currentDate} placeholder=\"MM-DD-YYY\" onChange={e=>handleDateChange(e)} type=\"date\"></input>\r\n                            <input className='hour ' value={currentTime} onChange={e=>handleTimeChange(e)} type=\"time\"></input>\r\n                        </div>\r\n                    </div>\r\n                 )\r\n            }else{\r\n                dateC= (\r\n                    <div className='dateContainer hideElement'></div>\r\n                )\r\n            }\r\n        \r\n        return dateC;\r\n}\r\n  \r\nexport default DateContainer;","import React,{useState,useContext} from 'react';\r\nimport { BsList,BsFillTriangleFill } from 'react-icons/bs';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DateContainer from './DateContainer';\r\nimport {FilterContext} from '../contexts/FilterContext'\r\nimport './ItemList.css' \r\n\r\n\r\n\r\nlet items=[\r\n    {\r\n        name:\"Problem\",\r\n        category: \"Ideation\",\r\n        checked: true,\r\n        date:'00-00-00',\r\n        time:'00:00',\r\n        id:1\r\n\r\n    },\r\n    {\r\n        name:\"Solution\",\r\n        category: \"Ideation\",\r\n        checked:true,\r\n        date:'00-00-00',\r\n        time:'00:00',\r\n        id:2\r\n    },\r\n    {\r\n        name:\"Team\",\r\n        category: \"Ideation\",\r\n        checked:true,\r\n        date:'00-00-00',\r\n        time:'00:00',\r\n        id:3\r\n    },\r\n    {\r\n        name:\"Ecosystem\",\r\n        category: \"Validation\",\r\n        checked:true,\r\n        date:'00-00-00',\r\n        time:'00:00',\r\n        id:4\r\n    },\r\n    {\r\n        name:\"Results\",\r\n        category: \"Validation\",\r\n        checked:true,\r\n        date:'00-00-00',\r\n        time:'00:00',\r\n        id:5\r\n    }\r\n\r\n\r\n]\r\n\r\nconst reorder=(list,startIndex, endIndex)=>{\r\n    const result=[...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex,0,removed);\r\n    return result\r\n\r\n}\r\n\r\nfunction ItemList() {\r\n    const {alls, selected, setSelected} = useContext(FilterContext)\r\n    const[itemss,setItems]=useState(items);\r\n    const[activeb,setActive]=useState(true);\r\n    let arrayK=[]\r\n    const keyValues=itemss.map((item)=>{\r\n        if(!arrayK.includes(item.category)){\r\n            arrayK.push(item.category)\r\n        }\r\n        \r\n    })\r\n    const handleSelectAll=()=>{\r\n          setSelected('itemSelected')\r\n          setTimeout(()=>{\r\n            setSelected('')\r\n          },1000)\r\n           \r\n      }\r\n   \r\n    const handleChangeCheckState=(e,index)=>{\r\n        let currentItems=itemss\r\n        if(activeb){\r\n            currentItems[index].checked=false\r\n            setActive(false)\r\n            setItems([...currentItems])\r\n        }else{\r\n            currentItems[index].checked=true\r\n            setActive(true)\r\n            setItems([...currentItems])\r\n        }\r\n        \r\n        \r\n    };\r\n\r\n    const lists=(arrayK)=>{\r\n\r\n        const jxEleme=arrayK.map((list)=>{\r\n            return (\r\n                <div>\r\n                \r\n                   \r\n                <div className='headers'>\r\n                        <h3 className=\"inovation fontStyle\">{list}</h3>\r\n                        <button className=\"inovation2 fontStyle2\" type='button' onClick={handleSelectAll}>select all in {list}</button>\r\n                        <h3 className=\"inovation2 fontStyle hideElement\">Due Date(Optional)</h3>\r\n                </div>\r\n                <DragDropContext onDragEnd={(result)=>{\r\n                    const {source, destination}=result;\r\n                    if(!destination){\r\n                        return;\r\n                    }\r\n                    if(source.index===destination.index&&source.droppableId===destination.droppableId){\r\n                        return;\r\n                    }\r\n                    setItems((prevItems)=>{\r\n                        return reorder(prevItems,source.index,destination.index)\r\n                    })\r\n\r\n                }}>\r\n                    <Droppable droppableId={list+'s'}>{(droppableProvided)=>(\r\n\r\n                        <div {...droppableProvided.droppableProps} \r\n                        ref={droppableProvided.innerRef}>\r\n                        \r\n                                \r\n                            {itemss.map((item,index)=>{ \r\n                                \r\n                                if(item.category===list){\r\n                                    let count=-1\r\n                                    count++\r\n                                    return(\r\n                                    \r\n                                <Draggable key={item.name+list} draggableId={item.name} index={index}>\r\n                                    {(draggableProvided)=>(\r\n                                        <div {...draggableProvided.draggableProps} \r\n                                        ref={draggableProvided.innerRef} \r\n                                        {...draggableProvided.dragHandleProps} \r\n                                        className={'item '+ selected} >\r\n                                            \r\n                                                    <div className='item2 hideElement'>\r\n                                                            <label className=\"containerC\">\r\n                                                                <input type=\"checkbox\" onClick={(e)=>\r\n                                                                    handleChangeCheckState(e,index)}/>\r\n\r\n                                                                <span className={'checkmark '+(item.checked?'chekedtrue':'chekedfalse')} />\r\n                                                            </label>\r\n                                                    </div>\r\n                                                    <div className={'cardBox ' + (activeb ? 'borderCardBoxOn' : 'borderCardBoxOff') }>\r\n                                                        <div>\r\n                                                                <h4>{item.name}</h4>\r\n                                                            <p className=\"viewLink\">view builder</p>\r\n                                                                \r\n                                                        </div>\r\n                                                        <div className=\"greyBox\">\r\n                                                            <BsFillTriangleFill className={'triangle '+(item.checked?'triRed':'triGrey')}/>\r\n                                                        </div>\r\n                                                            \r\n                                                    </div>\r\n                                                \r\n\r\n                                                <DateContainer \r\n                                                date={item.date} \r\n                                                time={item.time} \r\n                                                checked={item.checked} \r\n                                                items={itemss}\r\n                                                index={count}\r\n                                                 />                  \r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </Draggable>)}})\r\n                                \r\n                            }\r\n                                {droppableProvided.placeholder}\r\n                        </div>\r\n                    )}\r\n                    </Droppable>\r\n                </DragDropContext> \r\n        \r\n        </div>\r\n            )\r\n        })\r\n        return jxEleme\r\n    }\r\n    let filterElement\r\n    if(!alls){\r\n        filterElement=( \r\n            <div>\r\n                <div className='headers'>\r\n                        <h3 className=\"inovation fontStyle\">Social Innovation</h3>\r\n                        <h3 className=\"inovation2 fontStyle hideElement\">Due Date(Optional)</h3>\r\n                </div>\r\n                <DragDropContext onDragEnd={(result)=>{\r\n                    const {source, destination}=result;\r\n                    if(!destination){\r\n                        return;\r\n                    }\r\n                    if(source.index===destination.index&&source.droppableId===destination.droppableId){\r\n                        return;\r\n                    }\r\n                    setItems((prevItems)=>{\r\n                        return reorder(prevItems,source.index,destination.index)\r\n                    })\r\n\r\n                }}>\r\n                    <Droppable droppableId=\"items\">{(droppableProvided)=>(\r\n\r\n                            <div {...droppableProvided.droppableProps} ref={droppableProvided.innerRef}>\r\n                        \r\n                                \r\n                                {itemss.map((item,index)=>(\r\n                                    <Draggable key={item.name+index} draggableId={item.name} index={index} >\r\n                                        {(draggableProvided)=>(\r\n                                            <div {...draggableProvided.draggableProps} \r\n                                            ref={draggableProvided.innerRef} \r\n                                            {...draggableProvided.dragHandleProps} \r\n                                            className={'item ' + selected} >\r\n                                                    <div className='hideElement'>\r\n                                                        <BsList  className=\"iconList\"/>\r\n                                                    </div>\r\n                                                    <div className='item2 hideElement'>\r\n                                                        <label className=\"containerC\">\r\n                                                            <input type=\"checkbox\" onClick={(e)=>\r\n                                                                handleChangeCheckState(e,index)}/>\r\n\r\n                                                            <span className={'checkmark '+(item.checked?'chekedtrue':'chekedfalse')} />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div className={'cardBox ' + (activeb ? 'borderCardBoxOn':'borderCardBoxOff')}>\r\n                                                            <div>\r\n                                                                    <h4>{item.name}</h4>\r\n                                                                <p className=\"viewLink\">view builder</p>\r\n                                                                \r\n                                                            </div>\r\n                                                            <div className=\"greyBox\">\r\n                                                                <BsFillTriangleFill className={'triangle '+(item.checked?'triRed':'triGrey')} />\r\n                                                            </div>\r\n                                                            \r\n                                                        </div>\r\n                                                    \r\n\r\n                                                    <DateContainer \r\n                                                    \r\n                                                    date={item.date} \r\n                                                    time={item.time} \r\n                                                    checked={item.checked}\r\n                                                    items={itemss}\r\n                                                    index={index}\r\n                                                     />                  \r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {droppableProvided.placeholder}\r\n                            </div>)}\r\n                    </Droppable>\r\n                </DragDropContext> \r\n            </div>    )\r\n    }else{\r\n        filterElement= lists(arrayK)\r\n    }\r\n\r\n        \r\n    return(\r\n    <div className=\"itemContainer\">\r\n        <h1 className=\"title fontStyle\">Select Builder Schedule - 2019 Fall Cohort</h1>\r\n        <div className=\"boxContainer\">\r\n            <div>    \r\n                      {filterElement}    \r\n            </div>\r\n            \r\n        </div>\r\n        <div className='buttonsContainer hideElement'>\r\n            <button className='cancel' type='button'>\r\n                Cancel\r\n            </button>\r\n            <button className='use' type='button'>\r\n                use this builder scheduler\r\n            </button>\r\n        </div>\r\n    </div>\r\n  \r\n    );\r\n}\r\n  \r\nexport default ItemList;\r\n  ","import React,{ useState } from 'react';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport ItemList from './components/ItemList';\r\nimport {FilterContext} from './contexts/FilterContext'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [alls,setAlls]=useState(false);\r\n  const [selected,setSelected]=useState('');\r\n  return (\r\n    <div className=\"App\">\r\n       \r\n      <FilterContext.Provider value={{alls,setAlls,selected,setSelected}}>\r\n       \r\n        <NavigationBar/>\r\n        <ItemList/>\r\n      </FilterContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}